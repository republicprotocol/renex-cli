module.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t){e.exports=require("bignumber.js")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.NOT_SUBMITTED="NOT_SUBMITTED",e.FAILED_TO_SETTLE="FAILED_TO_SETTLE",e.OPEN="OPEN",e.CONFIRMED="CONFIRMED",e.CANCELED="CANCELED",e.SETTLED="SETTLED",e.SLASHED="SLASHED",e.EXPIRED="EXPIRED"}(t.OrderStatus||(t.OrderStatus={})),function(e){e.RenEx="renex",e.RenExAtomic="atomic"}(t.OrderSettlement||(t.OrderSettlement={})),function(e){e.MIDPOINT="midpoint",e.LIMIT="limit",e.MIDPOINT_IOC="midpoint_ioc",e.LIMIT_IOC="limit_ioc"}(t.OrderType||(t.OrderType={})),function(e){e.BUY="buy",e.SELL="sell"}(t.OrderSide||(t.OrderSide={})),function(e){e.BTC="BTC",e.ETH="ETH",e.DGX="DGX",e.TUSD="TUSD",e.REN="REN",e.ZRX="ZRX",e.OMG="OMG"}(t.Token||(t.Token={})),function(e){e.ETH_BTC="ETH/BTC",e.DGX_ETH="DGX/ETH",e.TUSD_ETH="TUSD/ETH",e.REN_ETH="REN/ETH",e.ZRX_ETH="ZRX/ETH",e.OMG_ETH="OMG/ETH"}(t.MarketPair||(t.MarketPair={})),function(e){e.Withdraw="withdraw",e.Deposit="deposit"}(t.BalanceActionType||(t.BalanceActionType={})),function(e){e.Pending="pending",e.Done="done",e.Failed="failed",e.Replaced="replaced"}(t.TransactionStatus||(t.TransactionStatus={})),t.NullConsole={error:e=>null,log:e=>null},function(e){e.InvalidSwapper="invalid_swapper",e.ChangedSwapper="changed_swapper",e.NotConnected="not_connected",e.NotAuthorized="not_authorized",e.AtomNotAuthorized="atom_not_authorized",e.ConnectedUnlocked="connected_unlocked",e.ConnectedLocked="connected_locked"}(t.AtomicConnectionStatus||(t.AtomicConnectionStatus={}))},function(e,t){e.exports=require("bn.js")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(0),r=n(2),o=n(1);t.toSmallestUnit=function(e,t){return e.times(new a.BigNumber(10).exponentiatedBy(t.decimals))},t.fromSmallestUnit=function(e,t){return e.div(new a.BigNumber(10).exponentiatedBy(t.decimals))},t.supportedTokens=function(e){return Promise.resolve([o.Token.ETH,o.Token.DGX,o.Token.TUSD,o.Token.REN,o.Token.ZRX,o.Token.OMG])},t.tokenToID=function(e){switch(e){case o.Token.BTC:return 0;case o.Token.ETH:return 1;case o.Token.DGX:return 256;case o.Token.TUSD:return 257;case o.Token.REN:return 65536;case o.Token.ZRX:return 65537;case o.Token.OMG:return 65538}throw new Error(`Invalid token: ${e}`)},t.idToToken=function(e){switch(e){case 0:return o.Token.BTC;case 1:return o.Token.ETH;case 256:return o.Token.DGX;case 257:return o.Token.TUSD;case 65536:return o.Token.REN;case 65537:return o.Token.ZRX;case 65538:return o.Token.OMG}throw new Error(`Invalid token ID: ${e}`)},t.generateTokenPairing=function(e,t){const n=new r.BN(e).toArrayLike(Buffer,"be",4),a=new r.BN(t).toArrayLike(Buffer,"be",4);return new r.BN(Buffer.concat([n,a]))},t.splitTokenPairing=function(e){const t=e.toArrayLike(Buffer,"be",8);return[new r.BN(t.slice(0,4)).toNumber(),new r.BN(t.slice(4,8)).toNumber()]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ErrUnimplemented="Method not implemented.",t.ErrCanceledByUser="Transaction canceled",t.ErrSignatureCanceledByUser="Signature canceled",t.ErrUnsignedTransaction="Unable to sign transaction",t.ErrInvalidOrderDetails="Something went wrong while encoding order",t.ErrNumericalPrecision="Unsupported precision numbers",t.ErrFailedDeposit="Unable to deposit funds",t.ErrInsufficientBalance="Insufficient balance",t.ErrInsufficientFunds="Insufficient funds - please ensure you have enough ETH for the transaction fees",t.ErrUnsupportedFilterStatus="Unable to filter by specified status",t.ErrUnknownOrderStatus="Unknown order status"},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(40)),o=n(13);var s;!function(e){e.AUTO="auto",e.HEX="hex",e.BASE64="base64",e.BUFFER="buffer",e.UNKNOWN="unknown"}(s=t.Encodings||(t.Encodings={}));const i={value:"",encoding:s.AUTO},u=(e,t)=>{if(void 0!==t&&("string"==typeof e&&t!==s.BUFFER?e={value:e,encoding:t}:e instanceof Buffer&&t===s.BUFFER&&(e={value:e,encoding:t})),"string"==typeof e&&(e={value:e,encoding:s.AUTO}),e instanceof Buffer&&(e={value:e,encoding:s.BUFFER}),e.encoding===s.AUTO&&("string"==typeof e.value?""===e.value||"0x"===e.value.slice(0,2)||e.value.match("^[A-Fa-f0-9]+$")?e.encoding=s.HEX:e.value.match("^[A-Za-z0-9+/=]+$")&&(e.encoding=s.BASE64):e.value instanceof Buffer&&(e.encoding=s.BUFFER)),e.encoding===s.BUFFER&&!(e.value instanceof Buffer))throw new Error("invalid buffer");if(e.encoding===s.HEX){if("string"!=typeof e.value)throw new Error("invalid hex");if("0x"===e.value.slice(0,2)&&(e.value=e.value.slice(2)),""===e.value&&(e.value="00"),e.value.length%2==1&&(e.value="0"+e.value),!e.value.match("^[A-Fa-f0-9]+$"))throw new Error("invalid hex")}return e};class d extends(o.Record(i)){constructor(e,t){e instanceof d&&(e={value:e.value,encoding:e.encoding}),super(e=u(e,t))}toHex(e="0x"){switch(this.encoding){case s.HEX:return e+this.value;case s.BASE64:return e+Buffer.from(this.value,"base64").toString("hex");case s.BUFFER:return e+this.value.toString("hex");default:throw new Error("Unable to convert to hexadecimal representation")}}toBase64(){switch(this.encoding){case s.HEX:return Buffer.from(this.value,"hex").toString("base64");case s.BASE64:return this.value;case s.BUFFER:return this.value.toString("base64");default:throw new Error("Unable to convert to base64 representation")}}toBase58(){const e=this.toBuffer();return r.encode(e)}toBuffer(){switch(this.encoding){case s.HEX:return Buffer.from(this.value,"hex");case s.BASE64:return Buffer.from(this.value,"base64");case s.BUFFER:return this.value;default:throw new Error("Unable to convert to buffer")}}toString(){return this.toHex()}}t.EncodedData=d},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(8),s=n(3),i=n(1),u=n(7);t.getTokenDetails=(async(e,t)=>{let n=await e._cachedTokenDetails.get(t);if(!n){const a=e._contracts.renExTokens.tokens(s.tokenToID(t));e._cachedTokenDetails.set(t,a),n=await a}return{address:n.addr,decimals:new r.default(n.decimals).toNumber(),registered:n.registered}});const d=(e,n)=>Promise.all(n.map(async n=>{try{return await(async(e,n)=>{const a=await t.getTokenDetails(e,n);let u=new r.default(0);if(n===i.Token.ETH)u=new r.default(await e.getWeb3().eth.getBalance(e.getAddress()));else{let t=e._contracts.erc20.get(n);t||(t=new(o.withProvider(e.getWeb3().currentProvider,o.ERC20))(a.address),e._contracts.erc20.set(n,t)),u=new r.default(await t.balanceOf(e.getAddress()))}return s.fromSmallestUnit(u,a)})(e,n)}catch(e){return console.error(`Unable to retrieve non-deposited balance for token #${n}. ${e}`),new r.default(0)}})),c=(e,n)=>Promise.all(n.map(async n=>{try{return(async(e,n)=>{const a=await t.getTokenDetails(e,n),o=new r.default(await e._contracts.renExBalances.traderBalances(e.getAddress(),a.address));return s.fromSmallestUnit(o,a)})(e,n)}catch(e){return new r.default(0)}}));t.balances=(async(e,t)=>Promise.all([c(e,t),(async(e,t)=>{const n=u.fetchTraderOrders(e).then(e=>{const t=new Map;return e.forEach(e=>{if(e.status===i.OrderStatus.NOT_SUBMITTED||e.status===i.OrderStatus.OPEN||e.status===i.OrderStatus.CONFIRMED)if(e.computedOrderDetails.orderSettlement===i.OrderSettlement.RenEx){const n=e.computedOrderDetails.spendToken,a=t.get(n);a?t.set(n,a.plus(e.computedOrderDetails.spendVolume)):t.set(n,e.computedOrderDetails.spendVolume)}else{const n=e.computedOrderDetails.feeToken,a=t.get(n);a?t.set(n,a.plus(e.computedOrderDetails.feeAmount)):t.set(n,e.computedOrderDetails.feeAmount)}}),t}),a=u.fetchBalanceActions(e).then(e=>{const t=new Map;return e.forEach(e=>{if(e.action===i.BalanceActionType.Withdraw&&e.status===i.TransactionStatus.Pending){const n=t.get(e.token);n?t.set(e.token,n.plus(e.amount)):t.set(e.token,e.amount)}}),t}),[o,s]=await Promise.all([n,a]);return t.map(e=>{const t=o.get(e)||new r.default(0),n=s.get(e)||new r.default(0);return t.plus(n)})})(e,t),d(e,t)]).then(([e,n,a])=>{const o=new Map;return t.forEach((t,s)=>{const i=e[s],u=n[s];let d=i.minus(u);d.lt(new r.default(0))&&(d=new r.default(0)),o.set(t,{free:d,used:u,nondeposited:a[s]})}),o}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(17),r=n(19);t.fetchTraderOrders=(async(e,t={refresh:!0})=>{const n=await e._storage.getOrders();if(t.refresh){const t=await r.updateAllOrderStatuses(e,n);n.map((e,a)=>{const r=t.get(e.id);r&&(n[a].status=r)})}return n.sort((e,t)=>e.computedOrderDetails.date<t.computedOrderDetails.date?-1:1)}),t.fetchBalanceActions=(async(e,t={refresh:!0})=>{const n=await e._storage.getBalanceActions();if(t.refresh){const t=await a.updateAllBalanceActionStatuses(e,n);n.map((e,a)=>{const r=t.get(e.txHash);r&&(n[a].status=r)})}return n.sort((e,t)=>e.time<t.time?-1:1)})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(28),o=a(n(29)),s=a(n(30)),i=a(n(31)),u=a(n(32)),d=a(n(33)),c=a(n(34)),p=a(n(35));t.ETH_CODE=1,t.withProvider=((e,t)=>(t.setProvider(e),t)),t.ERC20=r({abi:s.default}),t.DarknodeRegistry=r({abi:o.default}),t.Orderbook=r({abi:i.default}),t.RenExSettlement=r({abi:d.default}),t.RenExBalances=r({abi:u.default}),t.RenExTokens=r({abi:c.default}),t.Wyre=r({abi:p.default})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const o=a(n(12)),s=n(37),i=n(2),u=n(10),d=r(n(38)),c=n(1),p=n(39),l=n(5),m=n(14),y=n(22),f=n(13),w=n(3),b=12,h=12,g="0x0000000000000000000000000000000000000000";var E,v,_;!function(e){e[e.RenEx=1]="RenEx",e[e.RenExAtomic=2]="RenExAtomic"}(E=t.OrderSettlement||(t.OrderSettlement={})),function(e){e[e.MIDPOINT=0]="MIDPOINT",e[e.LIMIT=1]="LIMIT",e[e.MIDPOINT_IOC=2]="MIDPOINT_IOC",e[e.LIMIT_IOC=3]="LIMIT_IOC"}(v=t.OrderType||(t.OrderType={})),function(e){e[e.BUY=0]="BUY",e[e.SELL=1]="SELL"}(_=t.OrderParity||(t.OrderParity={}));t.Tuple=class extends(f.Record({c:0,q:0})){};class O extends(f.Record({signature:"",id:"",type:v.LIMIT,parity:_.BUY,orderSettlement:E.RenEx,expiry:Math.round((new Date).getTime()/1e3),tokens:new i.BN(0),price:new i.BN(0),volume:new i.BN(0),minimumVolume:new i.BN(0),nonce:new i.BN(0)})){}t.Order=O;t.AtomAuthorizationRequest=class extends(f.Record({atomAddress:"",signature:""})){};t.OpenOrderRequest=class extends(f.Record({address:"",orderFragmentMappings:Array()})){};class k extends(f.Record({address:"",tokenID:0})){}t.WithdrawRequest=k;class T extends(f.Record({id:"",orderId:"",orderType:v.LIMIT,orderParity:_.BUY,orderSettlement:E.RenEx,orderExpiry:Math.round((new Date).getTime()/1e3),tokens:"",price:["",""],volume:["",""],minimumVolume:["",""],nonce:"",index:0})){}t.OrderFragment=T;class x extends(f.Record({id:"",darknodes:u.List(),orderFragments:u.List()})){}async function S(e,t,n){let a;try{a=await e.getOrders(t,n)}catch(e){throw console.error("Failed to get call getOrders in ordersBatch"),e}const r=a[0],o=a[1],s=a[2];let d=u.List();for(let e=0;e<r.length;e++){const t=y.orderbookStateToOrderStatus(new i.BN(s[e]).toNumber());d=d.push([r[e],t,o[e]])}return d}function M(e,t){return Buffer.from(e.utils.keccak256(JSON.stringify(t)).slice(2),"hex").toString("base64")}async function D(e,t,n){const a=await e.getDarknodePublicKey(t);if(null===a||0===a.length)return n.error(`Unable to retrieve public key for ${t}`),null;const r=Buffer.from(a.slice(2),"hex"),o=r.slice(0,8).readUInt32BE(4),i=r.slice(8),u=new s;return u.importKey({n:i,e:o}),u.setOptions({encryptionScheme:{scheme:"pkcs1_oaep",hash:"sha1"}}),u}function B(e,t,n){if(null===e)return new l.EncodedData("",l.Encodings.BASE64);const a=new i.BN(t.index).toArrayLike(Buffer,"be",n),r=t.value.toArrayLike(Buffer,"be",n),o=Buffer.concat([a,r]);return new l.EncodedData(e.encrypt(o,"buffer"),l.Encodings.BUFFER)}t.Pod=x,t.randomNonce=function(e){let t=e();for(;t.gte(d.PRIME);)t=e();return t},t.authorizeSwapper=async function(e,t){const n=await o.default.post(`${e}/authorize`,t.toJS());if(201===n.status)return!0;if(401===n.status)throw new Error("Could not authorize swapper. Reason: address is not KYC'd");throw new Error(`Could not authorize swapper. Status code: ${n.status}`)},t.checkAtomAuthorization=async function(e,t,n){return o.default.get(`${e}/authorized/${t}`).then(e=>{if(200!==e.status)throw new Error("Unexpected status code: "+e.status);return new l.EncodedData(e.data.atomAddress,l.Encodings.HEX).toHex().toLowerCase()===n.toLowerCase()}).catch(e=>(console.error(e),!1))},t.createOrder=function(e,t){const n=m.MarketPairs.get(e.symbol);if(!n)throw new Error(`Couldn't find market information for market: ${e.symbol}`);const a=n.base,r=n.quote,o=e.side===c.OrderSide.BUY?r:a,s=e.side===c.OrderSide.BUY?a:r,u=p.adjustDecimals(e.price,0,b),d=p.adjustDecimals(e.volume,0,h),l=p.adjustDecimals(e.minVolume,0,h),y=e.side===c.OrderSide.BUY?w.generateTokenPairing(w.tokenToID(o),w.tokenToID(s)):w.generateTokenPairing(w.tokenToID(s),w.tokenToID(o));return new O({type:function(e){switch(e){case c.OrderType.MIDPOINT:return v.MIDPOINT;case c.OrderType.LIMIT:return v.LIMIT;case c.OrderType.MIDPOINT_IOC:return v.MIDPOINT_IOC;case c.OrderType.LIMIT_IOC:return v.LIMIT_IOC}}(e.type),orderSettlement:function(e){switch(e){case c.OrderSettlement.RenEx:return E.RenEx;case c.OrderSettlement.RenExAtomic:return E.RenExAtomic}}(n.orderSettlement),expiry:e.expiry,nonce:t||new i.BN(0),parity:function(e){switch(e){case c.OrderSide.BUY:return _.BUY;case c.OrderSide.SELL:return _.SELL}}(e.side),tokens:y,price:u,volume:d,minimumVolume:l})},t.submitOrderFragments=async function(e,t){try{const n=await o.default.post(`${e}/orders`,t.toJS());if(201!==n.status)throw new Error(`Unexpected status code returned by Ingress (STATUS ${n.status})`);return new l.EncodedData(n.data.signature,l.Encodings.BASE64)}catch(e){throw e.response?401===e.response.status?new Error("KYC verification failed in Ingress"):new Error(`Ingress returned status ${e.response.status} with reason: ${e.response.data}`):e}},t.requestWithdrawalSignature=async function(e,t,n){const a=new k({address:t.slice(2),tokenID:w.tokenToID(n)}),r=await o.default.post(`${e}/withdrawals`,a.toJS());if(201!==r.status)throw new Error("Unexpected status code: "+r.status);return new l.EncodedData(r.data.signature,l.Encodings.BASE64)},t.getOrders=async function(e,t,n){let a;try{a=new i.BN(await e.ordersCount()).toNumber()}catch(e){throw console.error("Failed to call orderCount in getOrders"),e}const r=n||a-(t||0);let o=void 0!==t?t:Math.max(0,a-r),s=Math.min(r,500);const d=r?o+Math.min(a,r):a;let c=u.List();for(;;){if(o>=d)return c;s=Math.min(s,d-o);const t=await S(e,o,s);c=c.concat(t).toList(),o+=s}},t.getOrderID=function(e,t){const[n,a]=w.splitTokenPairing(t.tokens),r=t.parity===_.BUY?t.tokens:w.generateTokenPairing(a,n),o=Buffer.concat([new i.BN(t.type).toArrayLike(Buffer,"be",1),new i.BN(t.expiry).toArrayLike(Buffer,"be",8),t.nonce.toArrayLike(Buffer,"be",8),new i.BN(t.orderSettlement).toArrayLike(Buffer,"be",8),r.toArrayLike(Buffer,"be",8),new i.BN(t.price).toArrayLike(Buffer,"be",32),new i.BN(t.volume).toArrayLike(Buffer,"be",32),new i.BN(t.minimumVolume).toArrayLike(Buffer,"be",32)]);return new l.EncodedData(e.utils.keccak256(`0x${o.toString("hex")}`),l.Encodings.HEX)},t.buildOrderMapping=async function(e,t,n,a){const r=await async function(e,t,n){const a=await async function(e){const t=[];let n=g;do{const a=await e.getDarknodes(n,10);t.push(...a.filter(e=>e!==g&&e!==n)),[n]=a.slice(-1)}while(n!==g);return t}(t),r=new i.BN(await t.minimumPodSize()).toNumber();n.log(`Using minimum pod size ${r}`);const o=await t.currentEpoch();if(!a.length)return Promise.reject(new Error("no darknodes in contract"));if(0===r)return Promise.reject(new Error("invalid minimum pod size (0)"));const s=new i.BN(o[0]),d=new i.BN(a.length);let c=s.mod(d),p=u.List();for(let e=0;e<a.length;e++)p=p.set(e,-1);n.log("Calculating pods");let m=u.List();const y=Math.floor(a.length/r)||1;for(let e=0;e<y;e++)m=m.push(new x);for(let e=0;e<a.length;e++){for(;-1!==p.get(c.toNumber());)c=(c=c.add(new i.BN(1))).mod(d);p=p.set(c.toNumber(),e);const t=e%y,n=new x({darknodes:m.get(t,new x).darknodes.push(a[c.toNumber()])});m=m.set(t,n),c=(c=c.add(s)).mod(d)}for(let t=0;t<m.size;t++){let n=u.List();for(const e of m.get(t,new x).darknodes.toArray())n=n.push(Buffer.from(e.substring(2),"hex"));const a=new l.EncodedData(e.utils.keccak256(`0x${Buffer.concat(n.toArray()).toString("hex")}`),l.Encodings.HEX),r=new x({id:a.toBase64(),darknodes:m.get(t,new x).darknodes});m=m.set(t,r)}return m}(e,t,a),o=y.priceToCoExp(n.price),s=y.volumeToCoExp(n.volume),c=y.volumeToCoExp(n.minimumVolume);return r.map(async r=>{const p=r.darknodes.size,m=Math.floor(2*(p+1)/3);a.log(`Splitting secret shares for pod ${r.id.slice(0,8)}...`);const y=d.split(p,m,new i.BN(n.tokens)),f=d.split(p,m,new i.BN(o.co)),w=d.split(p,m,new i.BN(o.exp)),b=d.split(p,m,new i.BN(s.co)),h=d.split(p,m,new i.BN(s.exp)),g=d.split(p,m,new i.BN(c.co)),E=d.split(p,m,new i.BN(c.exp)),v=d.split(p,m,n.nonce);let _=u.List();for(let o=0;o<p;o++){const s=r.darknodes.get(o,void 0);if(void 0===s)throw new Error("invalid darknode access");a.log(`Encrypting for darknode ${new l.EncodedData("0x1b14"+s.slice(2),l.Encodings.HEX).toBase58().slice(0,8)}...`);let i=null;try{i=await D(t,s,a)}catch(e){Promise.reject(e)}const[u,d,c,p,m,O,k,x]=[y.get(o),f.get(o),w.get(o),b.get(o),h.get(o),g.get(o),E.get(o),v.get(o)];if(void 0===u||void 0===d||void 0===c||void 0===p||void 0===m||void 0===O||void 0===k||void 0===x)throw new Error("invalid share access");let S=new T({orderId:n.id,orderType:n.type,orderParity:n.parity,orderSettlement:n.orderSettlement,orderExpiry:n.expiry,tokens:B(i,u,8).toBase64(),price:[B(i,d,8).toBase64(),B(i,c,8).toBase64()],volume:[B(i,p,8).toBase64(),B(i,m,8).toBase64()],minimumVolume:[B(i,O,8).toBase64(),B(i,k,8).toBase64()],nonce:B(i,x,8).toBase64(),index:o+1});S=S.set("id",M(e,S)),_=_.push(S)}return r.set("orderFragments",_)}).reduce(async(e,t)=>{const n=await e,a=await t;return n.set(a.id,a.orderFragments)},Promise.resolve(u.Map()))},t.encryptForDarknode=B},function(e,t){e.exports=require("immutable")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=a(n(24)),s=n(2),i=a(n(25)),u=n(8),d=n(36),c=n(20),p=n(5),l=n(14),m=n(41),y=n(3),f=n(15),w=n(17),b=n(6),h=n(18),g=n(19),E=n(23),v=n(7),_=n(44),O=n(1);!function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(1));class k{constructor(e,t){switch(this._atomConnectionStatus=O.AtomicConnectionStatus.NotConnected,this._atomConnectedAddress="",this._cachedTokenDetails=new Map,this.atom={getStatus:()=>f.currentAtomConnectionStatus(this),isConnected:()=>f.atomConnected(this),refreshStatus:()=>f.refreshAtomConnectionStatus(this),resetStatus:()=>f.resetAtomConnection(this),authorize:()=>f.authorizeAtom(this),fetchBalances:e=>f.atomicBalances(this,e),fetchAddresses:e=>f.atomicAddresses(e)},this.utils={normalizePrice:(e,t)=>c.toOriginalType(c.normalizePrice(new r.default(e),t),e),normalizeVolume:(e,t)=>c.toOriginalType(c.normalizeVolume(new r.default(e),t),e),normalizeOrder:e=>{const t=Object.assign(e,{});return t.price=this.utils.normalizePrice(e.price,e.side===O.OrderSide.SELL),t.volume=this.utils.normalizeVolume(e.volume),e.minVolume&&(t.minVolume=this.utils.normalizeVolume(e.minVolume)),t}},this._address="",this.fetchBalances=(e=>b.balances(this,e)),this.fetchBalanceActionStatus=(e=>w.updateBalanceActionStatus(this,e)),this.fetchOrderStatus=(e=>E.status(this,e)),this.fetchMatchDetails=(e=>E.matchDetails(this,e)),this.fetchOrderbook=(e=>g.getOrders(this,e)),this.fetchOrderBlockNumber=(e=>g.getOrderBlockNumber(this,e)),this.fetchMarkets=(()=>l.fetchMarkets(this)),this.fetchSupportedTokens=(()=>y.supportedTokens(this)),this.fetchSupportedAtomicTokens=(()=>f.supportedAtomicTokens(this)),this.deposit=((e,t)=>w.deposit(this,e,t)),this.withdraw=((e,t,n=!1)=>w.withdraw(this,e,t,n)),this.openOrder=((e,t)=>g.openOrder(this,e,t)),this.cancelOrder=(e=>g.cancelOrder(this,e)),this.fetchDarknodeFeePercent=(()=>E.darknodeFees(this)),this.fetchMinEthTradeVolume=(()=>g.getMinEthTradeVolume(this)),this.fetchGasPrice=(()=>h.getGasPrice(this)),this.fetchTraderOrders=((e={refresh:!0})=>v.fetchTraderOrders(this,e)),this.fetchBalanceActions=((e={refresh:!0})=>v.fetchBalanceActions(this,e)),this.refreshBalanceActionStatuses=(async()=>w.updateAllBalanceActionStatuses(this)),this.refreshOrderStatuses=(async()=>g.updateAllOrderStatuses(this)),this.getWeb3=(()=>this._web3),this.getAddress=(()=>this._address),this.getConfig=(()=>this._config),this.setAddress=(e=>{const t=""===e?"":new p.EncodedData(e,p.Encodings.HEX).toHex();this._address=t,"localStorage"===this.getConfig().storageProvider&&(this._storage=new i.default(t))}),this.updateProvider=(e=>{this._web3=new o.default(e),this._contracts={renExSettlement:new(u.withProvider(this.getWeb3().currentProvider,u.RenExSettlement))(this._networkData.contracts[0].renExSettlement),renExBalances:new(u.withProvider(this.getWeb3().currentProvider,u.RenExBalances))(this._networkData.contracts[0].renExBalances),orderbook:new(u.withProvider(this.getWeb3().currentProvider,u.Orderbook))(this._networkData.contracts[0].orderbook),darknodeRegistry:new(u.withProvider(this.getWeb3().currentProvider,u.DarknodeRegistry))(this._networkData.contracts[0].darknodeRegistry),renExTokens:new(u.withProvider(this.getWeb3().currentProvider,u.RenExTokens))(this._networkData.contracts[0].renExTokens),erc20:new Map,wyre:new(u.withProvider(this.getWeb3().currentProvider,u.Wyre))(this._networkData.contracts[0].wyre)}}),this._web3=new o.default(e),this._config=d.generateConfig(t),this.getConfig().network){case"mainnet":this._networkData=m.networks.mainnet;break;case"testnet":this._networkData=m.networks.testnet;break;default:throw new Error(`Unsupported network field: ${this.getConfig().network}`)}switch(this._cachedTokenDetails=this._cachedTokenDetails.set(O.Token.BTC,Promise.resolve({addr:"0x0000000000000000000000000000000000000000",decimals:new s.BN(8),registered:!0})).set(O.Token.ETH,Promise.resolve({addr:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",decimals:new s.BN(18),registered:!0})).set(O.Token.DGX,Promise.resolve({addr:this._networkData.tokens.DGX,decimals:new s.BN(9),registered:!0})).set(O.Token.TUSD,Promise.resolve({addr:this._networkData.tokens.TUSD,decimals:new s.BN(18),registered:!0})).set(O.Token.REN,Promise.resolve({addr:this._networkData.tokens.REN,decimals:new s.BN(18),registered:!0})).set(O.Token.ZRX,Promise.resolve({addr:this._networkData.tokens.ZRX,decimals:new s.BN(18),registered:!0})).set(O.Token.OMG,Promise.resolve({addr:this._networkData.tokens.OMG,decimals:new s.BN(18),registered:!0})),this.getConfig().storageProvider){case"localStorage":this._storage=new i.default(this._address);break;case"memory":this._storage=new _.MemoryStorage;break;default:if("string"==typeof this.getConfig().storageProvider)throw new Error(`Unsupported storage option: ${this.getConfig().storageProvider}.`);this._storage=this.getConfig().storageProvider}this._contracts={renExSettlement:new(u.withProvider(this.getWeb3().currentProvider,u.RenExSettlement))(this._networkData.contracts[0].renExSettlement),renExBalances:new(u.withProvider(this.getWeb3().currentProvider,u.RenExBalances))(this._networkData.contracts[0].renExBalances),orderbook:new(u.withProvider(this.getWeb3().currentProvider,u.Orderbook))(this._networkData.contracts[0].orderbook),darknodeRegistry:new(u.withProvider(this.getWeb3().currentProvider,u.DarknodeRegistry))(this._networkData.contracts[0].darknodeRegistry),renExTokens:new(u.withProvider(this.getWeb3().currentProvider,u.RenExTokens))(this._networkData.contracts[0].renExTokens),erc20:new Map,wyre:new(u.withProvider(this.getWeb3().currentProvider,u.Wyre))(this._networkData.contracts[0].wyre)}}}t.RenExSDK=k,t.default=k},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(10));t.Record=function(e){return class extends(r.Record(e)){constructor(e){super(r.fromJS(e||{}))}get(e){return super.get(e)}set(e,t){return super.set(e,t)}merge(e){return super.merge(e)}toJS(){return super.toJS()}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=n(10),r=n(1);t.MarketPairs=a.OrderedMap().set(r.MarketPair.ETH_BTC,{symbol:r.MarketPair.ETH_BTC,orderSettlement:r.OrderSettlement.RenExAtomic,quote:r.Token.BTC,base:r.Token.ETH}).set(r.MarketPair.DGX_ETH,{symbol:r.MarketPair.DGX_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.DGX}).set(r.MarketPair.TUSD_ETH,{symbol:r.MarketPair.TUSD_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.TUSD}).set(r.MarketPair.REN_ETH,{symbol:r.MarketPair.REN_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.REN}).set(r.MarketPair.ZRX_ETH,{symbol:r.MarketPair.ZRX_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.ZRX}).set(r.MarketPair.OMG_ETH,{symbol:r.MarketPair.OMG_ETH,orderSettlement:r.OrderSettlement.RenEx,quote:r.Token.ETH,base:r.Token.OMG}),t.fetchMarkets=async function(e){return Promise.resolve(t.MarketPairs.valueSeq().toArray())}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(16),s=n(3),i=n(1),u=n(6),d=n(7);t.currentAtomConnectionStatus=(e=>e._atomConnectionStatus),t.atomConnected=(e=>{const n=t.currentAtomConnectionStatus(e);return n===i.AtomicConnectionStatus.ConnectedLocked||n===i.AtomicConnectionStatus.ConnectedUnlocked}),t.resetAtomConnection=(async e=>(e._atomConnectedAddress="",e._atomConnectionStatus=i.AtomicConnectionStatus.NotConnected,t.refreshAtomConnectionStatus(e))),t.refreshAtomConnectionStatus=(async e=>(e._atomConnectionStatus=await c(e),e._atomConnectionStatus));const c=async e=>{try{const t=await o.challengeSwapper(),n=o.checkSigner(e.getWeb3(),t);if(""===e._atomConnectedAddress){if(await o.getAtomicBalances().then(e=>e.ethereum.address)!==n)return i.AtomicConnectionStatus.InvalidSwapper;e._atomConnectedAddress=n}else if(e._atomConnectedAddress!==n)return i.AtomicConnectionStatus.ChangedSwapper;return e.getAddress()?o._connectToAtom(t,e._networkData.ingress,e.getAddress()):i.AtomicConnectionStatus.NotConnected}catch(e){return i.AtomicConnectionStatus.NotConnected}};t.authorizeAtom=(async e=>{const n=await t.atomicAddresses([i.Token.ETH]).then(e=>e[0]);return await o._authorizeAtom(e.getWeb3(),e._networkData.ingress,n,e.getAddress()),t.refreshAtomConnectionStatus(e)}),t.supportedAtomicTokens=(async e=>[i.Token.BTC,i.Token.ETH]);t.atomicAddresses=(e=>o.getAtomicBalances().then(t=>e.map(e=>{switch(e){case i.Token.ETH:return t.ethereum.address;case i.Token.BTC:return t.bitcoin.address}return""})));t.atomicBalances=(async(e,t)=>Promise.all([(async(e,t)=>o.getAtomicBalances().then(n=>Promise.all(t.map(async t=>{const a=await u.getTokenDetails(e,t);let o;switch(t){case i.Token.ETH:o=new r.default(n.ethereum.amount);break;case i.Token.BTC:o=new r.default(n.bitcoin.amount)}return o?s.fromSmallestUnit(o,a):new r.default(0)}))))(e,t),(async(e,t)=>d.fetchTraderOrders(e).then(e=>{const n=new Map;return e.forEach(e=>{if(e.computedOrderDetails.orderSettlement===i.OrderSettlement.RenExAtomic&&(e.status===i.OrderStatus.NOT_SUBMITTED||e.status===i.OrderStatus.OPEN||e.status===i.OrderStatus.CONFIRMED)){const t=e.computedOrderDetails.spendToken,a=n.get(t);a?n.set(t,a.plus(e.computedOrderDetails.spendVolume)):n.set(t,e.computedOrderDetails.spendVolume)}}),t.map(e=>n.get(e)||new r.default(0))}))(e,t)]).then(([e,n])=>{let a=new Map;return t.forEach((t,o)=>{a=a.set(t,{used:n[o],free:r.default.max(new r.default(0),e[o].minus(n[o]))})}),a}))},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(12)),o=a(n(21)),s=n(1),i=n(5),u=n(4),d=n(9),c="http://localhost:18516";async function p(){let e;try{e=(await r.default.get(`${c}/balances`)).data}catch(e){throw console.error(e),new Error(t.ErrorUnableToRetrieveStatus)}return e}t.ErrorAtomNotLinked="Atom back-end not linked to wallet",t.ErrorUnableToConnect="Unable to connect go Atom back-end",t.ErrorAddressNotAuthorized="Ethereum address not authorized for Atom",t.ErrorUnableToRetrieveStatus="Unable to retrieve order status",t.ErrorUnableToRetrieveBalances="Unable to retrieve Atomic balances",t.checkSigner=function(e,t){const n=JSON.stringify(t.whoAmI),a="Ethereum Signed Message:\n"+n.length+n,r=e.utils.keccak256(a),o="0x"+t.signature.slice(0,64),s="0x"+t.signature.slice(64,128),i="0x"+t.signature.slice(128,130),u="0x"+(parseInt(i,16)+27).toString(16);return e.eth.accounts.recover({messageHash:r,r:o,s:s,v:u})},t.challengeSwapper=async function(){const e=o.default.randomBytes(20).toString("hex"),t=await r.default.get(`${c}/whoami/${e}`).then(e=>e.data);if(void 0===t||void 0===t.whoAmI||void 0===t.whoAmI.authorizedAddresses||null===t.whoAmI.authorizedAddresses)throw new Error("Failed the swapper whoami challenge.");return t},t._connectToAtom=async function(e,t,n){const a=e.whoAmI.authorizedAddresses.map(e=>new i.EncodedData(e,i.Encodings.HEX).toHex().toLowerCase()),r=new i.EncodedData(n,i.Encodings.HEX).toHex().toLowerCase();if(-1===a.indexOf(r))return s.AtomicConnectionStatus.NotAuthorized;const o=await p().then(e=>e.ethereum.address);return await d.checkAtomAuthorization(t,n,o)?s.AtomicConnectionStatus.ConnectedUnlocked:s.AtomicConnectionStatus.AtomNotAuthorized},t._authorizeAtom=async function(e,t,n,a){const r=await async function(e,t,n){const a=e.utils.toHex("RenEx: authorize: "),r=new i.EncodedData(t,i.Encodings.HEX),o=a+r.toHex("");let s;try{s=new i.EncodedData(await e.eth.personal.sign(o,n))}catch(e){return e.message.match(/User denied message signature/)?Promise.reject(new Error(u.ErrSignatureCanceledByUser)):Promise.reject(new Error(u.ErrUnsignedTransaction))}const c=s.toBuffer();return 27!==c[64]&&28!==c[64]||(c[64]=c[64]-27),new d.AtomAuthorizationRequest({atomAddress:r.toHex(),signature:c.toString("base64")})}(e,n,a);await d.authorizeSwapper(t,r)},t.submitOrderToAtom=async function(e){const t={orderID:e.toHex("")};let n;try{n=(await r.default.post(`${c}/orders`,t)).data}catch(e){throw e}if(n.orderID!==t.orderID)throw new Error("Invalid order ID returned by Atom")},t.getOrderStatus=async function(e){let n;try{n=(await r.default.get(`${c}/status/${e.toHex("")}`)).data}catch(e){throw console.error(e),new Error(t.ErrorUnableToRetrieveStatus)}return n.status},t.getAtomicBalances=p},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(1),i=n(8),u=n(4),d=n(9),c=n(3),p=n(6),l=n(18),m=n(7);t.updateBalanceActionStatus=(async(e,t)=>{const n=await l.getTransactionStatus(e,t);return e._storage.getBalanceAction(t).then(async t=>{t&&(t.status=n,await e._storage.setBalanceAction(t))}).catch(console.error),n}),t.updateAllBalanceActionStatuses=(async(e,n)=>{const a=new Map;return n||(n=await m.fetchBalanceActions(e)),await Promise.all(n.map(async n=>{if(n.status===s.TransactionStatus.Pending){const r=await t.updateBalanceActionStatus(e,n.txHash);r!==n.status&&a.set(n.txHash,r)}})),a}),t.onTxHash=(e=>new Promise((t,n)=>{e.once("transactionHash",n=>t({txHash:n,promiEvent:e})).catch(n)})),t.deposit=(async(e,n,a)=>{n=new r.default(n);const d=await p.balances(e,[a]).then(e=>e.get(a));if(d&&n.gt(d.nondeposited))throw new Error(u.ErrInsufficientBalance);const m=e.getAddress(),y=await p.getTokenDetails(e,a),f=await l.getGasPrice(e),w=new o.BN(c.toSmallestUnit(n,y).toFixed()),b={action:s.BalanceActionType.Deposit,amount:n,time:Math.floor((new Date).getTime()/1e3),status:s.TransactionStatus.Pending,token:a,trader:m,txHash:"",nonce:void 0};try{if((e=>{return e.address.toLowerCase()==="0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE".toLowerCase()})(y)){const{txHash:n,promiEvent:a}=await t.onTxHash(e._contracts.renExBalances.deposit(y.address,w,{value:w.toString(),from:m,gasPrice:f}));try{b.nonce=await e.getWeb3().eth.getTransactionCount(m,"pending")-1}catch(e){console.error(e)}return b.txHash=n,e._storage.setBalanceAction(b).catch(console.error),{balanceAction:b,promiEvent:a}}{let n=e._contracts.erc20.get(a);void 0===n&&(n=new(i.withProvider(e.getWeb3().currentProvider,i.ERC20))(y.address),e._contracts.erc20.set(a,n)),new o.BN(await n.allowance(m,e._contracts.renExBalances.address,{from:m,gasPrice:f})).lt(w)&&await t.onTxHash(n.approve(e._contracts.renExBalances.address,w,{from:m,gasPrice:f}));const{txHash:r,promiEvent:u}=await t.onTxHash(e._contracts.renExBalances.deposit(y.address,w,{gas:a===s.Token.DGX?5e5:15e4,gasPrice:f,from:m}));b.txHash=r;try{b.nonce=await e.getWeb3().eth.getTransactionCount(m,"pending")-1}catch(e){console.error(e)}return e._storage.setBalanceAction(b).catch(console.error),{balanceAction:b,promiEvent:u}}}catch(t){if(t.tx)return b.txHash=t.tx,e._storage.setBalanceAction(b).catch(console.error),{balanceAction:b,promiEvent:null};if(t.message.match("Insufficient funds"))throw new Error(u.ErrInsufficientFunds);if(t.message.match("User denied transaction signature"))throw new Error(u.ErrCanceledByUser);throw t}}),t.withdraw=(async(e,n,a,i)=>{if(n=new r.default(n),!0===i)throw new Error(u.ErrUnimplemented);const m=await p.balances(e,[a]).then(e=>e.get(a));if(m&&n.gt(m.free))throw new Error(u.ErrInsufficientBalance);const y=e.getAddress(),f=await p.getTokenDetails(e,a),w=await l.getGasPrice(e),b=new o.BN(c.toSmallestUnit(n,f).toFixed()),h={action:s.BalanceActionType.Withdraw,amount:n,time:Math.floor((new Date).getTime()/1e3),status:s.TransactionStatus.Pending,token:a,trader:y,txHash:"",nonce:void 0};try{const n=await d.requestWithdrawalSignature(e._networkData.ingress,y,a),{txHash:r,promiEvent:o}=await t.onTxHash(e._contracts.renExBalances.withdraw(f.address,b,n.toHex(),{from:y,gasPrice:w}));h.txHash=r;try{h.nonce=await e.getWeb3().eth.getTransactionCount(y,"pending")-1}catch(e){console.error(e)}return e._storage.setBalanceAction(h).catch(console.error),{balanceAction:h,promiEvent:o}}catch(t){if(t.tx)return h.txHash=t.tx,e._storage.setBalanceAction(h).catch(console.error),{balanceAction:h,promiEvent:null};if(t.message.match("Insufficient funds"))throw new Error(u.ErrInsufficientFunds);if(t.message.match("User denied transaction signature"))throw new Error(u.ErrCanceledByUser);throw t}})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(12)),o=a(n(0)),s=n(11),i=n(8),u=n(3),d=n(1),c=n(6);t.transfer=(async(e,n,a,r)=>{const s=await t.getGasPrice(e),p=await c.getTokenDetails(e,a),l=u.toSmallestUnit(new o.default(r),p).toString();if(a===d.Token.ETH)e.getWeb3().eth.sendTransaction({from:e.getAddress(),to:n,value:l,gasPrice:s});else{let t=e._contracts.erc20.get(a);t||(t=new(i.withProvider(e.getWeb3().currentProvider,i.ERC20))(p.address),e._contracts.erc20.set(a,t)),await t.transfer(n,l)}}),t.getGasPrice=(async e=>{try{const t=await r.default.get("https://ethgasstation.info/json/ethgasAPI.json");if(t.data.fast){const e=t.data.fast*Math.pow(10,8);return e>6e10?6e10:e}throw new Error("cannot retrieve gas price from ethgasstation")}catch(t){try{return 1.1*await e.getWeb3().eth.getGasPrice()}catch(e){return}}}),t.getTransactionStatus=(async(e,t)=>{let n=await e.getWeb3().eth.getTransactionReceipt(t);if(!n){const a=await e.getWeb3().eth.getTransactionCount(e.getAddress());let r;try{r=await e._storage.getBalanceAction(t)}catch(e){return s.TransactionStatus.Pending}if(void 0===r||void 0===r.nonce)return s.TransactionStatus.Pending;if(!(a>r.nonce))return s.TransactionStatus.Pending;if(!(n=await e.getWeb3().eth.getTransactionReceipt(t)))return s.TransactionStatus.Replaced}if(!n.blockHash)return s.TransactionStatus.Pending;const a=n.status;return"0"===a||0===a||!1===a?s.TransactionStatus.Failed:s.TransactionStatus.Done})},function(e,t,n){"use strict";var a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const r=n(0),o=n(2),s=a(n(9)),i=n(16),u=n(20),d=n(5),c=n(4),p=n(14),l=n(1),m=n(15),y=n(17),f=n(6),w=n(18),b=n(23),h=n(7);t.getMinEthTradeVolume=(async e=>Promise.resolve(new r.BigNumber(1)));const g=(e,t)=>u.normalizeVolume(e.dividedBy(t),!0);t.openOrder=(async(e,n,a=l.NullConsole)=>{const d=p.MarketPairs.get(n.symbol);if(!d)throw new Error(`Unsupported market pair: ${n.symbol}`);const h=await t.getMinEthTradeVolume(e),E=Math.floor((new Date).getTime()/1e3);let v=((e,t,n,a,o)=>{const s=new r.BigNumber(t.price),i=o.base===l.Token.ETH?a:g(a,s);return{symbol:t.symbol,side:t.side,price:s,volume:new r.BigNumber(t.volume),minVolume:t.minVolume?new r.BigNumber(t.minVolume):i,expiry:void 0!==t.expiry?t.expiry:n+86400,type:void 0!==t.type?t.type:l.OrderType.LIMIT}})(0,n,E,h,d);const _=d.base,O=d.quote,k=await f.getTokenDetails(e,_);if(!((e,t)=>{const n=e.volume.eq(new r.BigNumber(e.volume.toFixed(t))),a=e.minVolume.eq(new r.BigNumber(e.minVolume.toFixed(t)));return n&&a})(v,k.decimals))throw new Error(`Order volumes are invalid. ${_} is limited to ${k.decimals} decimal places.`);if(!(e=>{const t=e.price.eq(u.normalizePrice(e.price,e.side===l.OrderSide.SELL)),n=e.volume.eq(u.normalizeVolume(e.volume)),a=e.minVolume.eq(u.normalizeVolume(e.minVolume));return t&&n&&a})(v)){if(!e.getConfig().autoNormalizeOrders)throw new Error("Order inputs have not been normalized.");v=(e=>{const t=Object.assign(e,{});return t.price=u.normalizePrice(e.price,e.side===l.OrderSide.SELL),t.volume=u.normalizeVolume(e.volume),t.minVolume=u.normalizeVolume(e.minVolume),t})(v)}const T=d.orderSettlement,x=v.volume.times(v.price),S=v.side===l.OrderSide.BUY?O:_,M=v.side===l.OrderSide.BUY?_:O,D=v.side===l.OrderSide.BUY?v.volume:x,B=v.side===l.OrderSide.BUY?x:v.volume,A=await b.darknodeFees(e);let I=M,N=x.times(A);T===l.OrderSettlement.RenExAtomic&&_===l.Token.ETH&&(I=l.Token.ETH,N=v.volume.times(A));const P=await f.balances(e,[S,I]);let R=new r.BigNumber(0);if(a.log("Verifying trader balance"),T===l.OrderSettlement.RenEx){const e=P.get(S);e&&(R=e.free)}else try{const t=await m.atomicBalances(e,[S]).then(e=>e.get(S));t&&(R=t.free)}catch(e){throw a.error(e.message||e),e}if(B.gt(R))throw a.error(c.ErrInsufficientBalance),new Error(c.ErrInsufficientBalance);if(v.price.lte(new r.BigNumber(0)))throw a.error("Invalid price"),new Error("Invalid price");if(v.volume.lte(new r.BigNumber(0)))throw a.error("Invalid volume"),new Error("Invalid volume");if(v.minVolume.lt(new r.BigNumber(0)))throw a.error("Invalid minimum volume"),new Error("Invalid minimum volume");const C=_===l.Token.ETH?h:g(h,v.price);if(v.volume.lt(C)){let e=`Volume must be at least ${C} ${_}`;throw _!==l.Token.ETH&&(e+=` or ${h} ${l.Token.ETH}`),a.error(e),new Error(e)}if(v.minVolume.lt(C)){let e=`Minimum volume must be at least ${C} ${_}`;throw _!==l.Token.ETH&&(e+=` or ${h} ${l.Token.ETH}`),a.error(e),new Error(e)}if(v.volume.lt(v.minVolume)){const e=`Volume must be greater or equal to minimum volume: (${v.minVolume})`;throw a.error(e),new Error(e)}if(T===l.OrderSettlement.RenExAtomic){const e=P.get(I);if(e&&N.gt(e.free))throw a.error("Insufficient balance for fees"),new Error("Insufficient balance for fees")}const U=s.randomNonce(()=>new o.BN(e.getWeb3().utils.randomHex(8).slice(2),"hex"));let L=s.createOrder(v,U);const F=s.getOrderID(e.getWeb3(),L);if(L=L.set("id",F.toBase64()),T===l.OrderSettlement.RenExAtomic){a.log("Submitting order to Atomic Swapper");try{await i.submitOrderToAtom(F)}catch(e){throw a.error(e.message||e),new Error("Error sending order to Atomic Swapper")}}let H;a.log("Building order mapping");try{H=await s.buildOrderMapping(e.getWeb3(),e._contracts.darknodeRegistry,L,a)}catch(e){throw a.error(e.message||e),e}const V=new s.OpenOrderRequest({address:e.getAddress().slice(2),orderFragmentMappings:[H]});let z;a.log("Sending order fragments");try{z=await s.submitOrderFragments(e._networkData.ingress,V)}catch(e){throw a.error(e.message||e),e}a.log("Waiting for transaction signature");const $=await w.getGasPrice(e);let j,X;try{({txHash:j,promiEvent:X}=await y.onTxHash(e._contracts.orderbook.openOrder(1,z.toString(),F.toHex(),{from:e.getAddress(),gasPrice:$})))}catch(e){throw a.error(e.message||e),e}a.log("Order submitted.");const G={orderInputs:v,status:l.OrderStatus.NOT_SUBMITTED,trader:e.getAddress(),id:F.toBase64(),transactionHash:j,computedOrderDetails:{spendToken:S,receiveToken:M,spendVolume:B,receiveVolume:D,date:E,feeAmount:N,feeToken:I,orderSettlement:T,nonce:U}};return e._storage.setOrder(G).catch(console.error),{traderOrder:G,promiEvent:X}}),t.cancelOrder=(async(e,t)=>{const n=new d.EncodedData(t,d.Encodings.BASE64).toHex(),a=await w.getGasPrice(e);return{promiEvent:e._contracts.orderbook.cancelOrder(n,{from:e.getAddress(),gasPrice:a})}}),t.getOrders=(async(e,t)=>{const n=[l.OrderStatus.NOT_SUBMITTED,l.OrderStatus.OPEN,l.OrderStatus.CONFIRMED];if(t.status&&!n.includes(t.status))throw new Error(c.ErrUnsupportedFilterStatus);let a=await s.getOrders(e._contracts.orderbook,t.start,t.limit);t.status&&(a=a.filter(e=>e[1]===t.status).toList());const r=t.address;return r&&(a=a.filter(e=>e[2].toLowerCase()===r.toLowerCase()).toList()),a.map(e=>({id:e[0],status:e[1],trader:e[2]})).toArray()}),t.updateAllOrderStatuses=(async(e,t)=>{const n=new Map;return t||(t=await h.fetchTraderOrders(e)),await Promise.all(t.map(async t=>{if(t.status===l.OrderStatus.NOT_SUBMITTED||t.status===l.OrderStatus.OPEN){const a=await b.status(e,t.id);a!==t.status&&n.set(t.id,a)}})),n}),t.getOrderBlockNumber=(async(e,t)=>{const n=new d.EncodedData(t,d.Encodings.BASE64).toHex();return new o.BN(await e._contracts.orderbook.orderBlockNumber(n)).toNumber()})},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(9);function s(e,t){return u(1e12,26,.005,e,1999,t)}function i(e,t){return u(1e12,0,.2,e,49,t)}function u(e,t,n,a,s,i){const u=a.times(e),c=1-Math.floor(Math.log10(n)),p=n*10**(c-1);let l,[m,y]=d(u,c,!1,i);for(m=i?(m+(p-m%p)%p)/n:(m-m%p)/n,[m,l]=d(new r.default(m),c,!1,i),y+=l;m>s;)m/=10,y++;const f=t+y;return new o.Tuple({c:m,q:f})}function d(e,t,n=!1,a){if(e.isEqualTo(0))return[0,0];let o=Math.floor(Math.log10(e.toNumber()))-(t-1);const s=new r.default(10).exponentiatedBy(new r.default(o).toNumber());let i;if(i=a?Math.ceil(e.div(s.toNumber()).toNumber()):Math.floor(e.div(s.toNumber()).toNumber()),n)for(;i%10==0&&0!==i;)i/=10,o++;return[i,o]}t.priceToTuple=s,t.tupleToPrice=(e=>{const t=new r.default(10).pow(e.q-26-12-3);return new r.default(e.c).times(5).times(t)}),t.normalizePrice=((e,n)=>t.tupleToPrice(s(e,n))),t.volumeToTuple=i,t.tupleToVolume=(e=>{const t=new r.default(10).pow(e.q-12);return new r.default(e.c).times(.2).times(t)}),t.normalizeVolume=((e,n)=>t.tupleToVolume(i(e,n))),t.toOriginalType=function(e,t){if(r.default.isBigNumber(t))return e;switch(typeof t){case"number":return e.toNumber();case"string":return e.toFixed();default:throw new Error(`Could not convert ${typeof t} to original type`)}}},function(e,t){e.exports=require("crypto")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(11),s=n(4),i=n(13);class u extends(i.Record({co:0,exp:0})){}function d(e){if(e.gte(10)){const t=d(e.div(10));return new u({co:t.co,exp:t.exp+1})}if(e.gte(1)){const t=e.div(.005).integerValue(r.default.ROUND_FLOOR);return new u({co:t.toNumber(),exp:38})}if(e.gt(0)){const t=d(e.times(10));return new u({co:t.co,exp:t.exp-1})}return new u({co:0,exp:0})}function c(e){if(e.gte(10)){const t=c(e.div(10));return new u({co:t.co,exp:t.exp+1})}if(e.gte(1)){const t=e.div(.2).integerValue(r.default.ROUND_FLOOR);return new u({co:t.toNumber(),exp:12})}if(e.gt(0)){const t=c(e.times(10));return new u({co:t.co,exp:t.exp-1})}return new u({co:0,exp:0})}t.CoExp=u,t.priceToCoExp=function(e){return d(new r.default(e.toString()).div(new r.default("1e12")))},t.volumeToCoExp=function(e){return c(new r.default(e.toString()).div(new r.default("1e12")))},t.priceFloatToCoExp=d,t.volumeFloatToCoExp=c,t.orderbookStateToOrderStatus=function(e){switch(e){case 0:return o.OrderStatus.NOT_SUBMITTED;case 1:return o.OrderStatus.OPEN;case 2:return o.OrderStatus.CONFIRMED;case 3:return o.OrderStatus.CANCELED;default:throw new Error(`${s.ErrUnknownOrderStatus}: ${e}`)}},t.settlementStatusToOrderStatus=function(e){switch(e){case 0:case 1:return o.OrderStatus.CONFIRMED;case 2:return o.OrderStatus.SETTLED;case 3:return o.OrderStatus.SLASHED;default:throw new Error(`${s.ErrUnknownOrderStatus}: ${e}`)}}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(16),i=n(5),u=n(22),d=n(3),c=n(1),p=n(15),l=n(19);t.status=(async(e,n)=>{const a=new i.EncodedData(n,i.Encodings.BASE64);let r,d;try{d=u.orderbookStateToOrderStatus(new o.BN(await e._contracts.orderbook.orderState(a.toHex())).toNumber())}catch(e){throw console.error("Unable to call orderState in status"),e}if(d===c.OrderStatus.CONFIRMED){r=await(async(e,n)=>{try{await t.matchDetails(e,n.toBase64())}catch(e){return c.OrderStatus.CONFIRMED}const a=await e._storage.getOrder(n.toBase64());if(!a||a.computedOrderDetails.orderSettlement===c.OrderSettlement.RenEx)return c.OrderStatus.SETTLED;const r=a.status?a.status:c.OrderStatus.CONFIRMED;if(!p.atomConnected(e))return r;try{let e=await s.getOrderStatus(n);return e!==c.OrderStatus.OPEN&&e!==c.OrderStatus.NOT_SUBMITTED||(e=c.OrderStatus.CONFIRMED),e}catch(e){return r}})(e,a);const o=await e._storage.getOrder(n);if(o&&o.computedOrderDetails.orderSettlement===c.OrderSettlement.RenEx&&r===c.OrderStatus.CONFIRMED){let t=0;try{t=await e.getWeb3().eth.getBlockNumber()}catch(e){console.error(e)}if(t>0){let a=0;try{a=await l.getOrderBlockNumber(e,n)}catch(e){console.error(e)}a>0&&t-a>300&&(r=c.OrderStatus.FAILED_TO_SETTLE)}}}else if(d===c.OrderStatus.OPEN){const t=await e._storage.getOrder(n);r=t&&t.orderInputs.expiry<Date.now()/1e3?c.OrderStatus.EXPIRED:d}else r=d;return e._storage.getOrder(n).then(async t=>{t&&(t.status=r,await e._storage.setOrder(t))}).catch(console.error),r}),t.darknodeFees=(async e=>{const t=new r.default(await e._contracts.renExSettlement.DARKNODE_FEES_NUMERATOR()),n=new r.default(await e._contracts.renExSettlement.DARKNODE_FEES_DENOMINATOR());return t.dividedBy(n)}),t.matchDetails=(async(e,t)=>{const n=await e._storage.getOrder(t);if(n&&n.matchDetails)return n.matchDetails;const a=new i.EncodedData(t,i.Encodings.BASE64),s=await e._contracts.renExSettlement.getMatchDetails(a.toHex()),u=new i.EncodedData(s.matchedID,i.Encodings.HEX);if(!s.settled)throw new Error("Not settled");const p=s.orderIsBuy?{orderID:t,matchedID:u.toBase64(),receivedToken:d.idToToken(new o.BN(s.secondaryToken).toNumber()),receivedVolume:new r.default(s.secondaryVolume),fee:new r.default(s.priorityFee),spentToken:d.idToToken(new o.BN(s.priorityToken).toNumber()),spentVolume:new r.default(s.priorityVolume)}:{orderID:t,matchedID:u.toBase64(),receivedToken:d.idToToken(new o.BN(s.priorityToken).toNumber()),receivedVolume:new r.default(s.priorityVolume),fee:new r.default(s.secondaryFee),spentToken:d.idToToken(new o.BN(s.secondaryToken).toNumber()),spentVolume:new r.default(s.secondaryVolume)};if(n&&n.computedOrderDetails.orderSettlement===c.OrderSettlement.RenExAtomic){const[e,t]=s.orderIsBuy?[new r.default(s.secondaryVolume).plus(new r.default(s.secondaryFee)),new r.default(s.priorityVolume).plus(new r.default(s.priorityFee))]:[new r.default(s.priorityVolume).plus(new r.default(s.priorityFee)),new r.default(s.secondaryVolume).plus(new r.default(s.secondaryFee))];p.receivedVolume=e,p.spentVolume=t,p.fee=new r.default(0)}return e._storage.getOrder(t).then(async t=>{t&&(t.matchDetails=p,await e._storage.setOrder(t))}).catch(console.error),p})},function(e,t){e.exports=require("web3")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(26)),o=n(27),s=(e,t)=>`renex_sdk_${e}_${t.toLowerCase()}`;t.default=class{constructor(e){const t=e||"default";this.orders=r.default.createInstance({name:"orders",storeName:s("orders",t),driver:[r.default.INDEXEDDB,r.default.WEBSQL,r.default.LOCALSTORAGE]}),this.balanceActions=r.default.createInstance({name:"deposits",storeName:s("deposits",t),driver:[r.default.INDEXEDDB,r.default.WEBSQL,r.default.LOCALSTORAGE]})}async setOrder(e){await this.orders.setItem(e.id,o.serializeTraderOrder(e))}async getOrder(e){const t=await this.orders.getItem(e);if(t)return o.deserializeTraderOrder(t)}async getOrders(){const e=[];return await this.orders.iterate(t=>{try{e.push(o.deserializeTraderOrder(t))}catch(e){console.error(e)}}),e}async setBalanceAction(e){await this.balanceActions.setItem(e.txHash,o.serializeBalanceAction(e))}async getBalanceAction(e){const t=await this.balanceActions.getItem(e);if(t)return o.deserializeBalanceAction(t)}async getBalanceActions(){const e=[];return await this.balanceActions.iterate(t=>{try{e.push(o.deserializeBalanceAction(t))}catch(e){console.error(e)}}),e}}},function(e,t){e.exports=require("localforage")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2);t.serializeTraderOrder=(e=>JSON.stringify(e)),t.deserializeTraderOrder=(e=>{const t=JSON.parse(e);return t.matchDetails&&(t.matchDetails.fee=new r.default(t.matchDetails.fee),t.matchDetails.receivedVolume=new r.default(t.matchDetails.receivedVolume),t.matchDetails.spentVolume=new r.default(t.matchDetails.spentVolume)),t.computedOrderDetails.receiveVolume=new r.default(t.computedOrderDetails.receiveVolume),t.computedOrderDetails.spendVolume=new r.default(t.computedOrderDetails.spendVolume),t.computedOrderDetails.feeAmount=new r.default(t.computedOrderDetails.feeAmount),t.computedOrderDetails.nonce=new o.BN(t.computedOrderDetails.nonce,"hex"),t.orderInputs.minVolume=new r.default(t.orderInputs.minVolume),t.orderInputs.price=new r.default(t.orderInputs.price),t.orderInputs.volume=new r.default(t.orderInputs.volume),t}),t.serializeBalanceAction=(e=>JSON.stringify(e)),t.deserializeBalanceAction=(e=>{const t=JSON.parse(e);return t.amount=new r.default(t.amount),t})},function(e,t){e.exports=require("truffle-contract")},function(e){e.exports=[{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isPendingRegistration",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"numDarknodesNextEpoch",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"},{name:"_publicKey",type:"bytes"},{name:"_bond",type:"uint256"}],name:"register",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumBond",type:"uint256"}],name:"updateMinimumBond",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"numDarknodes",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodeOwner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextSlasher",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isPendingDeregistration",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_start",type:"address"},{name:"_count",type:"uint256"}],name:"getPreviousDarknodes",outputs:[{name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextMinimumEpochInterval",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumEpochInterval",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_prover",type:"address"},{name:"_challenger1",type:"address"},{name:"_challenger2",type:"address"}],name:"slash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRefundable",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"previousEpoch",outputs:[{name:"epochhash",type:"uint256"},{name:"blocknumber",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"nextMinimumBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumEpochInterval",type:"uint256"}],name:"updateMinimumEpochInterval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"nextMinimumPodSize",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"numDarknodesPreviousEpoch",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"currentEpoch",outputs:[{name:"epochhash",type:"uint256"},{name:"blocknumber",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRegisteredInPreviousEpoch",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isDeregistered",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_nextMinimumPodSize",type:"uint256"}],name:"updateMinimumPodSize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"}],name:"deregister",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodePublicKey",outputs:[{name:"",type:"bytes"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ren",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"epoch",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"store",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"slasher",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_slasher",type:"address"}],name:"updateSlasher",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"getDarknodeBond",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferStoreOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRegistered",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"minimumPodSize",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isDeregisterable",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_start",type:"address"},{name:"_count",type:"uint256"}],name:"getDarknodes",outputs:[{name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_darknodeID",type:"address"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_darknodeID",type:"address"}],name:"isRefunded",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_renAddress",type:"address"},{name:"_storeAddress",type:"address"},{name:"_minimumBond",type:"uint256"},{name:"_minimumPodSize",type:"uint256"},{name:"_minimumEpochInterval",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"_darknodeID",type:"address"},{indexed:!1,name:"_bond",type:"uint256"}],name:"LogDarknodeRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"_darknodeID",type:"address"}],name:"LogDarknodeDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"_owner",type:"address"},{indexed:!1,name:"_amount",type:"uint256"}],name:"LogDarknodeOwnerRefunded",type:"event"},{anonymous:!1,inputs:[],name:"LogNewEpoch",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumBond",type:"uint256"},{indexed:!1,name:"nextMinimumBond",type:"uint256"}],name:"LogMinimumBondUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumPodSize",type:"uint256"},{indexed:!1,name:"nextMinimumPodSize",type:"uint256"}],name:"LogMinimumPodSizeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousMinimumEpochInterval",type:"uint256"},{indexed:!1,name:"nextMinimumEpochInterval",type:"uint256"}],name:"LogMinimumEpochIntervalUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSlasher",type:"address"},{indexed:!1,name:"nextSlasher",type:"address"}],name:"LogSlasherUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!1,inputs:[{name:"spender",type:"address"},{name:"tokens",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"from",type:"address"},{name:"to",type:"address"},{name:"tokens",type:"uint256"}],name:"transferFrom",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"tokenOwner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"to",type:"address"},{name:"tokens",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"tokenOwner",type:"address"},{name:"spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"tokens",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"tokenOwner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"tokens",type:"uint256"}],name:"Approval",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderConfirmer",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_orderID",type:"bytes32"},{name:"_matchedOrderID",type:"bytes32"}],name:"confirmOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"ordersCount",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_orderID",type:"bytes32"}],name:"cancelOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderBlockNumber",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ren",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_offset",type:"uint256"},{name:"_limit",type:"uint256"}],name:"getOrders",outputs:[{name:"",type:"bytes32[]"},{name:"",type:"address[]"},{name:"",type:"uint8[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orders",outputs:[{name:"state",type:"uint8"},{name:"trader",type:"address"},{name:"confirmer",type:"address"},{name:"settlementID",type:"uint64"},{name:"priority",type:"uint256"},{name:"blockNumber",type:"uint256"},{name:"matchedOrder",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"darknodeRegistry",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderDepth",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_settlementID",type:"uint64"},{name:"_signature",type:"bytes"},{name:"_orderID",type:"bytes32"}],name:"openOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderState",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newDarknodeRegistry",type:"address"}],name:"updateDarknodeRegistry",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderMatch",outputs:[{name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderTrader",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"orderPriority",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"settlementRegistry",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_renAddress",type:"address"},{name:"_darknodeRegistry",type:"address"},{name:"_settlementRegistry",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"previousFee",type:"uint256"},{indexed:!1,name:"nextFee",type:"uint256"}],name:"LogFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousDarknodeRegistry",type:"address"},{indexed:!1,name:"nextDarknodeRegistry",type:"address"}],name:"LogDarknodeRegistryUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[],name:"brokerVerifierContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newSettlementContract",type:"address"}],name:"updateRenExSettlementContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"rewardVaultContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"},{name:"_value",type:"uint256"},{name:"_signature",type:"bytes"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_traderFrom",type:"address"},{name:"_traderTo",type:"address"},{name:"_token",type:"address"},{name:"_value",type:"uint256"},{name:"_fee",type:"uint256"},{name:"_feePayee",type:"address"}],name:"transferBalanceWithFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"},{name:"_value",type:"uint256"}],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{name:"_newBrokerVerifierContract",type:"address"}],name:"updateBrokerVerifierContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_token",type:"address"}],name:"signalBackupWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"traderBalances",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"SIGNAL_DELAY",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRewardVaultContract",type:"address"}],name:"updateRewardVaultContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"settlementContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"ETHEREUM",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"traderWithdrawalSignals",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_rewardVaultContract",type:"address"},{name:"_brokerVerifierContract",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"trader",type:"address"},{indexed:!1,name:"token",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"LogBalanceDecreased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"trader",type:"address"},{indexed:!1,name:"token",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"LogBalanceIncreased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExSettlementContract",type:"address"},{indexed:!1,name:"newRenExSettlementContract",type:"address"}],name:"LogRenExSettlementContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRewardVaultContract",type:"address"},{indexed:!1,name:"newRewardVaultContract",type:"address"}],name:"LogRewardVaultContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousBrokerVerifierContract",type:"address"},{indexed:!1,name:"newBrokerVerifierContract",type:"address"}],name:"LogBrokerVerifierContractUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderStatus",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRenExTokensContract",type:"address"}],name:"updateRenExTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"renExTokensContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"submissionGasPriceLimit",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_orderID",type:"bytes32"}],name:"getMatchDetails",outputs:[{name:"settled",type:"bool"},{name:"orderIsBuy",type:"bool"},{name:"matchedID",type:"bytes32"},{name:"priorityVolume",type:"uint256"},{name:"secondaryVolume",type:"uint256"},{name:"priorityFee",type:"uint256"},{name:"secondaryFee",type:"uint256"},{name:"priorityToken",type:"uint32"},{name:"secondaryToken",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newOrderbookContract",type:"address"}],name:"updateOrderbook",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newSubmissionGasPriceLimit",type:"uint256"}],name:"updateSubmissionGasPriceLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"DARKNODE_FEES_DENOMINATOR",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderSubmitter",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"RENEX_ATOMIC_SETTLEMENT_ID",outputs:[{name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"}],name:"orderDetails",outputs:[{name:"settlementID",type:"uint64"},{name:"tokens",type:"uint64"},{name:"price",type:"uint256"},{name:"volume",type:"uint256"},{name:"minimumVolume",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"bytes32"},{name:"",type:"bytes32"}],name:"matchTimestamp",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"DARKNODE_FEES_NUMERATOR",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newSlasherAddress",type:"address"}],name:"updateSlasher",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_prefix",type:"bytes"},{name:"_settlementID",type:"uint64"},{name:"_tokens",type:"uint64"},{name:"_price",type:"uint256"},{name:"_volume",type:"uint256"},{name:"_minimumVolume",type:"uint256"}],name:"submitOrder",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"orderbookContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_prefix",type:"bytes"},{name:"_settlementID",type:"uint64"},{name:"_tokens",type:"uint64"},{name:"_price",type:"uint256"},{name:"_volume",type:"uint256"},{name:"_minimumVolume",type:"uint256"}],name:"hashOrder",outputs:[{name:"",type:"bytes32"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!0,inputs:[],name:"RENEX_SETTLEMENT_ID",outputs:[{name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_buyID",type:"bytes32"},{name:"_sellID",type:"bytes32"}],name:"settle",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"slasherAddress",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"renExBalancesContract",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_newRenExBalancesContract",type:"address"}],name:"updateRenExBalances",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_guiltyOrderID",type:"bytes32"}],name:"slash",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"},{name:"_orderbookContract",type:"address"},{name:"_renExTokensContract",type:"address"},{name:"_renExBalancesContract",type:"address"},{name:"_slasherAddress",type:"address"},{name:"_submissionGasPriceLimit",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"previousOrderbook",type:"address"},{indexed:!1,name:"nextOrderbook",type:"address"}],name:"LogOrderbookUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExTokens",type:"address"},{indexed:!1,name:"nextRenExTokens",type:"address"}],name:"LogRenExTokensUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousRenExBalances",type:"address"},{indexed:!1,name:"nextRenExBalances",type:"address"}],name:"LogRenExBalancesUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSubmissionGasPriceLimit",type:"uint256"},{indexed:!1,name:"nextSubmissionGasPriceLimit",type:"uint256"}],name:"LogSubmissionGasPriceLimitUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"previousSlasher",type:"address"},{indexed:!1,name:"nextSlasher",type:"address"}],name:"LogSlasherUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{constant:!1,inputs:[{name:"_tokenCode",type:"uint32"}],name:"deregisterToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_tokenCode",type:"uint32"},{name:"_tokenAddress",type:"address"},{name:"_tokenDecimals",type:"uint8"}],name:"registerToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"uint32"}],name:"tokens",outputs:[{name:"addr",type:"address"},{name:"decimals",type:"uint8"},{name:"registered",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"VERSION",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"_VERSION",type:"string"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,name:"tokenCode",type:"uint32"},{indexed:!1,name:"tokenAddress",type:"address"},{indexed:!1,name:"tokenDecimals",type:"uint8"}],name:"LogTokenRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,name:"tokenCode",type:"uint32"}],name:"LogTokenDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"}],name:"OwnershipRenounced",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}]},function(e){e.exports=[{anonymous:!1,inputs:[{indexed:!0,name:"_owner",type:"address"},{indexed:!0,name:"_approved",type:"address"},{indexed:!1,name:"_tokenId",type:"uint256"}],name:"Approval",type:"event"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"_from",type:"address"},{indexed:!0,name:"_to",type:"address"},{indexed:!1,name:"_tokenId",type:"uint256"}],name:"Transfer",type:"event"},{constant:!1,inputs:[{name:"_tokenId",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_tokenId",type:"uint256"}],name:"takeOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_tokenId",type:"uint256"}],name:"transfer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},{constant:!0,inputs:[{name:"_tokenId",type:"uint256"}],name:"approvedFor",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_tokenId",type:"uint256"}],name:"ownerOf",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"tokensOf",outputs:[{name:"",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultConfig={network:"mainnet",autoNormalizeOrders:!1,storageProvider:"localStorage"},t.generateConfig=function(e){e=e||{};const n=t.defaultConfig;return void 0!==e.network&&(n.network=e.network),void 0!==e.autoNormalizeOrders&&(n.autoNormalizeOrders=e.autoNormalizeOrders),void 0!==e.storageProvider&&(n.storageProvider=e.storageProvider),n}},function(e,t){e.exports=require("node-rsa")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(2),o=a(n(21)),s=n(10);t.PRIME=new r.BN("17012364981921935471");class i{constructor(e,t){this.index=e,this.value=t}}t.Share=i,t.split=function(e,n,a){if(e<n)throw new Error(`n-k error: n = ${e}, k = ${n}`);if(t.PRIME.lte(a))throw new Error("finite field error: secret is too big");const u=new Array(n);u[0]=a;for(let e=1;e<n;e++){let n=new r.BN(0);const a=new Int32Array(2);do{const e=o.default.randomBytes(a.length);a.set(e),n=new r.BN(Math.abs(a[0])).pow(new r.BN(2)).add(new r.BN(Math.abs(a[1])))}while(n.gte(t.PRIME));u[e]=n}const d=new Array(n);for(let n=1;n<=e;n++){let e=u[0];const a=new r.BN(n);let o=a.mod(t.PRIME);for(let n=1;n<u.length;n++){const r=u[n].mul(o).mod(t.PRIME);e=e.add(r).mod(t.PRIME),o=o.mul(a).mod(t.PRIME)}d[n-1]=new i(n,e)}return s.List(d)},t.join=function(e){let n=new r.BN(0);for(let a=0;a<e.size;a++){let o=new r.BN(1),s=new r.BN(1);for(let n=0;n<e.size;n++){if(a===n)continue;const i=e.get(a);if(void 0===i)throw new Error("accessing invalid share");const u=new r.BN(i.index),d=e.get(n);if(void 0===d)throw new Error("accessing invalid share");const c=new r.BN(d.index),p=o.mul(c).mod(t.PRIME);o=t.PRIME.sub(p);const l=u.sub(c).mod(t.PRIME);s=s.mul(l).mod(t.PRIME)}s=s.invm(t.PRIME);const i=e.get(a);if(void 0===i)throw new Error("accessing invalid share");let u=i.value.mul(o).mod(t.PRIME);u=u.mul(s).mod(t.PRIME),n=n.add(u).mod(t.PRIME)}return n}},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(0)),o=n(2),s=n(4);t.adjustDecimals=((e,t,n)=>{if(e=r.default.isBigNumber(e)||e instanceof r.default?new r.default(e.toFixed()):new r.default(e.toString()),t<n)return new o.BN(e.multipliedBy(new r.default(10).exponentiatedBy(n-t)).toFixed());{const a=e.dividedBy(new r.default(10).exponentiatedBy(t-n));if(!a.integerValue(r.default.ROUND_FLOOR).eq(a))throw new Error(`${s.ErrNumericalPrecision}: converting ${e} from ${t} to ${n} decimals`);return new o.BN(a.toFixed())}})},function(e,t){e.exports=require("bs58")},function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(n(42)),o=a(n(43));t.networks={mainnet:r.default,testnet:o.default}},function(e){e.exports={network:"mainnet",ingress:"https://renex-ingress-mainnet.herokuapp.com",infura:"https://mainnet.infura.io",etherscan:"https://etherscan.io",ethNetwork:"main",ethNetworkLabel:"Main",ledgerNetworkId:42,contracts:[{darknodeRegistry:"0x3799006a87FDE3CCFC7666B3E6553B03ED341c2F",orderbook:"0x6b8bB175c092DE7d81860B18DB360B734A2598e0",renExTokens:"0x7cAde4fbc8761817bb62A080733D1B6CaD744ec4",renExBalances:"0x5eC18B477B20aF940807B5478dB5A64Cd4a77EFd",renExSettlement:"0x908262dE0366E42d029B0518D5276762c92B21e1",wyre:"0x9f2a7b5E6280727cd6c8486f5F96E5f76164F2DF"}],tokens:{TUSD:"0x8dd5fbCe2F6a956C3022bA3663759011Dd51e73E",DGX:"0x4f3AfEC4E5a3F2A6a1A411DEF7D7dFe50eE057bF",REN:"0x408e41876cCCDC0F92210600ef50372656052a38",OMG:"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07",ZRX:"0xE41d2489571d322189246DaFA5ebDe1F4699F498"}}},function(e){e.exports={network:"testnet",ingress:"https://renex-ingress-testnet.herokuapp.com",infura:"https://kovan.infura.io",etherscan:"https://kovan.etherscan.io",ethNetwork:"kovan",ethNetworkLabel:"Kovan",ledgerNetworkId:42,contracts:[{darknodeRegistry:"0x75Fa8349fc9C7C640A4e9F1A1496fBB95D2Dc3d5",orderbook:"0xA9b453FC64b4766Aab8a867801d0a4eA7b1474E0",renExTokens:"0x481b39E2000a117CBA417473DC1E7cdAf4EAd98F",renExBalances:"0xb0E21B869D6f741a8A8F5075BA59E496593B881A",renExSettlement:"0x65A699E555cf93e4e115FfC2DE2F41d5A21DF3Fb",wyre:"0xB14fA2276D8bD26713A6D98871b2d63Da9eefE6f"}],tokens:{TUSD:"0x525389752ffe6487d33EF53FBcD4E5D3AD7937a0",DGX:"0x932F4580B261e9781A6c3c102133C8fDd4503DFc",REN:"0x2CD647668494c1B15743AB283A0f980d90a87394",OMG:"0x66497ba75dD127b46316d806c077B06395918064",ZRX:"0x6EB628dCeFA95802899aD3A9EE0C7650Ac63d543"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.MemoryStorage=class{constructor(){this.orders=new Map,this.balanceActions=new Map}async setOrder(e){this.orders.set(e.id,e)}async getOrder(e){return this.orders.get(e)}async getOrders(){return Array.from(this.orders.values())}async setBalanceAction(e){this.balanceActions.set(e.txHash,e)}async getBalanceAction(e){return this.balanceActions.get(e)}async getBalanceActions(){return Array.from(this.balanceActions.values())}}}]);
//# sourceMappingURL=index.js.map